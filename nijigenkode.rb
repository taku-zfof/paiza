# あなたは、数値を表す簡易的な二次元バーコードを作成してみることにしました。
# あなたの考えた二次元バーコードの表現方法は、以下の通りです。

# ・1 桁の数字を、3 × 3 の "." と "#" から成るグリッドで表現する。
# ・1 桁の数字は、その数字の数の分だけ "#" を左上から右下に向かって埋め、残りのマスは "." で埋めて表現する。
# ・与えられた数値は、上の桁の数値から順に上記表現方法に従ったグリッドで表現し、1 行あたり 3 つのグリッドを左から順に並べる。

# ある数値が与えられるので、以上の表現方法に従って与えられた数値を表す二次元バーコードを作成してください。
# ・1 行目には、二次元バーコードで表現すべき数値を表す整数 N が与えられます。
# ・入力は合計で 1 行となり、入力値最終行の末尾に改行が 1 つ入ります。
# ・期待する出力は (N の桁数) 行からなります。
# ・i 行目 (1 ≦ i ≦ N) には、二次元バーコードの i 行目の文字列を表す文字列 S_i を出力してください。
# ・出力最終行の末尾に改行を入れ、余計な文字、空行を含んではいけません。

# 自分の得意な言語で
# Let's チャレンジ！！
input = gets

sanmojizutu = input.scan(/.{1,#{3}}/)

n = sanmojizutu.length

for i in 0..n-1 do
    numbers = sanmojizutu[i].split("")
    
    ary = []
    for q in 0..2 do
        number = numbers[q].to_i
        nokori = 9 - number
        kode = "#"*number + "."*nokori
        ary.push(kode)
    end
    ichigyou = ary.join
    p = ichigyou.scan(/.{1,#{3}}/)
    puts p[0] + p[3] + p[6]
    puts p[1] + p[4] + p[7]
    puts p[2] + p[5] + p[8]
end